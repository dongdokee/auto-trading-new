# Environment Variables Template for Paper Trading
# Binance Testnet API 모의매매를 위한 환경변수 템플릿
#
# 사용법:
# 1. 이 파일을 .env로 복사하세요: cp .env.template .env
# 2. 아래 값들을 실제 Binance Testnet API 키로 변경하세요
# 3. .env 파일은 절대 git에 커밋하지 마세요 (보안상 중요!)

# =============================================================================
# BINANCE TESTNET API CREDENTIALS
# =============================================================================
# Binance Testnet에서 발급받은 API 키를 입력하세요
# 발급 방법: https://testnet.binancefuture.com/

# Testnet API Key (Public)
BINANCE_TESTNET_API_KEY=your_testnet_api_key_here

# Testnet API Secret (Private - 절대 공유하지 마세요!)
BINANCE_TESTNET_API_SECRET=your_testnet_api_secret_here

# =============================================================================
# PRODUCTION API CREDENTIALS (사용 안함 - 안전을 위해 주석 처리)
# =============================================================================
# 주의: Paper trading에서는 실제 API 키를 사용하지 않습니다!
# 실제 거래용 API 키는 절대 여기에 입력하지 마세요!

# BINANCE_API_KEY=DO_NOT_USE_IN_PAPER_TRADING
# BINANCE_API_SECRET=DO_NOT_USE_IN_PAPER_TRADING

# =============================================================================
# DATABASE CONFIGURATION (선택사항)
# =============================================================================
# Paper trading은 기본적으로 SQLite를 사용합니다
# PostgreSQL을 사용하려면 아래 설정을 활성화하세요

# PostgreSQL Database (선택사항)
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_DB=paper_trading
# POSTGRES_USER=your_postgres_user
# POSTGRES_PASSWORD=your_postgres_password

# TimescaleDB (고급 시계열 데이터 분석용 - 선택사항)
# TIMESCALE_HOST=localhost
# TIMESCALE_PORT=5432
# TIMESCALE_DB=market_data
# TIMESCALE_USER=your_timescale_user
# TIMESCALE_PASSWORD=your_timescale_password

# Redis (캐싱용 - 선택사항)
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=1

# =============================================================================
# MONITORING AND ALERTS (선택사항)
# =============================================================================
# 성능 모니터링 및 알림 설정

# Webhook for alerts (Slack, Discord 등)
# ALERT_WEBHOOK_URL=your_webhook_url_here

# Email notifications (선택사항)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_email_password
# ALERT_EMAIL_TO=recipient@example.com

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================
# 시스템 레벨 설정

# Environment
ENVIRONMENT=paper_trading

# Timezone
TZ=Asia/Seoul

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# 보안 관련 설정

# JWT Secret (for web interface - 선택사항)
# JWT_SECRET=your_random_jwt_secret_here

# API Rate Limiting
# RATE_LIMIT_ENABLED=true
# RATE_LIMIT_REQUESTS_PER_MINUTE=1000

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================
# 성능 최적화 설정

# Number of worker processes
# WORKER_PROCESSES=4

# Memory limits
# MAX_MEMORY_MB=2048

# Database connection pool
# DB_POOL_SIZE=20
# DB_MAX_OVERFLOW=30

# =============================================================================
# DEVELOPMENT SETTINGS (개발용)
# =============================================================================
# 개발 및 디버깅용 설정

# Debug mode
# DEBUG=false

# Profiling
# ENABLE_PROFILING=false

# Mock data (for testing without real market data)
# USE_MOCK_DATA=false

# =============================================================================
# BACKUP SETTINGS (선택사항)
# =============================================================================
# 데이터 백업 관련 설정

# Backup directory
# BACKUP_DIR=./backups

# Automatic backup
# AUTO_BACKUP_ENABLED=true
# BACKUP_INTERVAL_HOURS=24

# =============================================================================
# NOTES AND REMINDERS
# =============================================================================

# 🔑 보안 주의사항:
# - .env 파일을 절대 Git에 커밋하지 마세요
# - API 키는 절대 다른 사람과 공유하지 마세요
# - 정기적으로 API 키를 갱신하세요

# 📝 Testnet API 키 발급 방법:
# 1. https://testnet.binancefuture.com/ 접속
# 2. 가상 거래 계정 생성
# 3. API Management에서 새 API 키 생성
# 4. 생성된 키를 위의 BINANCE_TESTNET_API_KEY/SECRET에 입력

# 🎯 Paper Trading 장점:
# - 실제 돈 없이 전략 테스트 가능
# - 실시간 시장 데이터 사용
# - 완전한 거래 시뮬레이션
# - 위험 없는 학습 환경

# 🚀 시작하기:
# 1. .env 파일 생성: cp .env.template .env
# 2. API 키 설정 (위의 BINANCE_TESTNET_* 값들)
# 3. Paper trading 실행: python scripts/paper_trading.py

# 📊 모니터링:
# - 15분마다 성능 리포트 자동 생성
# - 실시간 거래 로그 확인
# - 웹 대시보드 (선택사항): http://localhost:8080

# ⚠️ 중요 알림:
# Paper trading은 실제 돈을 사용하지 않지만,
# 실제 시장 데이터와 거래 로직을 사용하므로
# 실전과 매우 유사한 경험을 제공합니다.