# Environment Variables Configuration
# Auto Trading System - Unified configuration for both paper trading and live trading
# Copy this file to .env and fill in your actual values
# .env ÌååÏùºÎ°ú Î≥µÏÇ¨ÌïòÏó¨ Ïã§Ï†ú Í∞íÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî

# =============================================================================
# QUICK START GUIDE
# =============================================================================
#
# For Paper Trading (Recommended for beginners):
# 1. Copy this file: cp .env.example .env
# 2. Get Binance Testnet API keys from: https://testnet.binancefuture.com/
# 3. Fill in BINANCE_TESTNET_API_KEY and BINANCE_TESTNET_API_SECRET
# 4. Run: python scripts/paper_trading.py
#
# For Live Trading (Advanced users only):
# 1. Complete all configuration sections below
# 2. Set up PostgreSQL/TimescaleDB and Redis
# 3. Set TRADING_MODE=live and BINANCE_TESTNET=false
# 4. Use production Binance API keys
#
# =============================================================================

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================

# Environment mode (development, paper_trading, production)
ENVIRONMENT=paper_trading

# Trading mode (paper, live)
# WARNING: Set to 'live' only when ready for real money trading!
TRADING_MODE=paper

# Timezone
TZ=Asia/Seoul

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Debug mode (only for development)
DEBUG=false
TESTING=false

# =============================================================================
# BINANCE API CONFIGURATION
# =============================================================================

# Binance Testnet (Paper Trading)
# Get your testnet API keys from: https://testnet.binancefuture.com/
BINANCE_TESTNET_API_KEY=your_testnet_api_key_here
BINANCE_TESTNET_API_SECRET=your_testnet_api_secret_here
BINANCE_TESTNET=true

# Binance Production (Live Trading)
# WARNING: Use ONLY for live trading with real money!
# Do NOT use production keys in paper trading mode!
BINANCE_API_KEY=your_binance_api_key
BINANCE_API_SECRET=your_binance_api_secret

# =============================================================================
# BYBIT API CONFIGURATION (Optional)
# =============================================================================

# Bybit Testnet
BYBIT_TESTNET_API_KEY=your_bybit_testnet_api_key
BYBIT_TESTNET_API_SECRET=your_bybit_testnet_api_secret
BYBIT_TESTNET=true

# Bybit Production
BYBIT_API_KEY=your_bybit_api_key
BYBIT_API_SECRET=your_bybit_api_secret

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Required for live trading and advanced features
# Optional for basic paper trading (uses in-memory storage)

# PostgreSQL for transactional data
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=autotrading
POSTGRES_USER=your_postgres_user
POSTGRES_PASSWORD=your_postgres_password

# TimescaleDB for time series data (market data, performance metrics)
TIMESCALE_HOST=localhost
TIMESCALE_PORT=5432
TIMESCALE_DB=market_data
TIMESCALE_USER=your_timescale_user
TIMESCALE_PASSWORD=your_timescale_password

# Database connection pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Used for caching, state management, and real-time data

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================

# Base currency for trading
BASE_CURRENCY=USDT

# Trading pairs (comma-separated)
# TRADING_PAIRS=BTC/USDT,ETH/USDT,BNB/USDT

# =============================================================================
# RISK MANAGEMENT
# =============================================================================

# Maximum portfolio value (USD)
MAX_PORTFOLIO_VALUE=1000000

# Maximum daily loss percentage (0.02 = 2%)
MAX_DAILY_LOSS_PCT=0.02

# Maximum drawdown percentage (0.12 = 12%)
MAX_DRAWDOWN_PCT=0.12

# Maximum leverage allowed
MAX_LEVERAGE=3.0

# Value at Risk (VaR) daily percentage
VAR_DAILY_PCT=0.02

# =============================================================================
# PAPER TRADING SETTINGS
# =============================================================================

# Initial virtual balance for paper trading (USD)
PAPER_TRADING_INITIAL_BALANCE=1000.0

# Commission rate (0.001 = 0.1%)
PAPER_TRADING_COMMISSION_RATE=0.001

# Simulate slippage
PAPER_TRADING_SLIPPAGE_SIMULATION=true
PAPER_TRADING_MAX_SLIPPAGE=0.002

# Simulate network latency
PAPER_TRADING_LATENCY_SIMULATION=true
PAPER_TRADING_MIN_LATENCY_MS=10
PAPER_TRADING_MAX_LATENCY_MS=50

# Performance report interval (minutes)
PAPER_TRADING_REPORT_INTERVAL_MINUTES=15

# =============================================================================
# MONITORING AND ALERTS
# =============================================================================

# Prometheus metrics
PROMETHEUS_PORT=9090

# Health check endpoint
HEALTHCHECK_PORT=8080

# Alert webhook URL (Slack, Discord, etc.)
ALERT_WEBHOOK_URL=https://your-webhook-url.com/alerts

# Email notifications (Optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_email_password
ALERT_EMAIL_TO=recipient@example.com

# Telegram notifications (Optional)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id

# =============================================================================
# SECURITY
# =============================================================================

# JWT secret for web interface authentication
JWT_SECRET_KEY=your_jwt_secret_key

# Encryption key for sensitive data
ENCRYPTION_KEY=your_encryption_key

# API rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=1000

# =============================================================================
# EXTERNAL DATA PROVIDERS (Optional)
# =============================================================================

# Alpha Vantage (for additional market data)
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_key

# Quandl (for economic data)
QUANDL_API_KEY=your_quandl_api_key

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================

# Number of worker processes
WORKER_PROCESSES=4

# Memory limits (MB)
MAX_MEMORY_MB=2048

# Enable profiling for performance analysis
ENABLE_PROFILING=false

# =============================================================================
# BACKUP SETTINGS (Optional)
# =============================================================================

# Backup directory
BACKUP_DIR=./backups

# Automatic backup
AUTO_BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Use mock data for testing without real market connection
USE_MOCK_DATA=false

# =============================================================================
# IMPORTANT NOTES AND SECURITY REMINDERS
# =============================================================================
#
# üîë SECURITY WARNINGS:
# - NEVER commit .env file to Git (it's in .gitignore)
# - NEVER share your API keys with anyone
# - Use different API keys for testnet and production
# - Regularly rotate your API keys
# - Enable IP whitelisting on exchange API settings
# - Use read-only API keys when possible
#
# üìù GETTING TESTNET API KEYS:
# 1. Visit https://testnet.binancefuture.com/
# 2. Create a virtual trading account (no KYC required)
# 3. Go to API Management
# 4. Create new API key pair
# 5. Copy keys to BINANCE_TESTNET_API_KEY and BINANCE_TESTNET_API_SECRET
#
# üéØ PAPER TRADING BENEFITS:
# - Test strategies without risking real money
# - Use real-time market data
# - Full trading simulation with slippage and latency
# - Safe learning environment
# - Validate strategies before going live
#
# üöÄ QUICK START (PAPER TRADING):
# 1. cp .env.example .env
# 2. Add Binance Testnet API keys (BINANCE_TESTNET_*)
# 3. python scripts/paper_trading.py
# 4. Monitor performance reports every 15 minutes
#
# üìä MONITORING YOUR TRADING:
# - Automatic performance reports every 15 minutes
# - Real-time trade logs in logs/ directory
# - Optional web dashboard at http://localhost:8080
# - Integration with Telegram/Slack for alerts
#
# ‚ö†Ô∏è BEFORE GOING LIVE:
# 1. Test thoroughly in paper trading mode (minimum 1 month)
# 2. Set up PostgreSQL/TimescaleDB and Redis
# 3. Configure all risk management parameters
# 4. Set up monitoring and alerting
# 5. Start with small position sizes
# 6. Use stop-loss orders
# 7. Never invest more than you can afford to lose
#
# üí° SYSTEM ARCHITECTURE:
# Paper Trading: Minimal setup, Binance Testnet API only
# Live Trading: Full infrastructure (databases, Redis, monitoring)
# Both modes use the same core trading logic and risk management
#
# üìö DOCUMENTATION:
# - Main docs: ./CLAUDE.md
# - Quick start: ./QUICK_START.md
# - Project structure: ./PROJECT_STRUCTURE.md
# - TDD guide: ./docs/augmented-coding.md
